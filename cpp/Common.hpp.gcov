        -:    0:Source:libs/rapidcheck/include/rapidcheck/fn/Common.hpp
        -:    0:Graph:sciNot5.gcno
        -:    0:Data:sciNot5.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:#pragma once
        -:    2:
        -:    3:namespace rc {
        -:    4:namespace fn {
        -:    5:
        -:    6:template <typename T>
        -:    7:class Constant {
        -:    8:public:
        -:    9:  template <typename Arg,
        -:   10:            typename = typename std::enable_if<
        -:   11:                !std::is_same<Decay<Arg>, Constant>::value>::type>
     218*:   12:  explicit Constant(Arg &&arg)
     218*:   13:      : m_value(std::forward<Arg>(arg)) {}
------------------
_ZN2rc2fn8ConstantINS_3SeqINS_10ShrinkableISt5tupleIJSt6vectorIdSaIdEEEEEEEEEC2ISA_vEEOT_:
    #####:   12:  explicit Constant(Arg &&arg)
    #####:   13:      : m_value(std::forward<Arg>(arg)) {}
------------------
_ZN2rc2fn8ConstantINS_3SeqINS_10ShrinkableISt6vectorIdSaIdEEEEEEEC2IS8_vEEOT_:
    #####:   12:  explicit Constant(Arg &&arg)
    #####:   13:      : m_value(std::forward<Arg>(arg)) {}
------------------
_ZN2rc2fn8ConstantINS_3SeqINS_10ShrinkableIdEEEEEC2IS5_vEEOT_:
    #####:   12:  explicit Constant(Arg &&arg)
    #####:   13:      : m_value(std::forward<Arg>(arg)) {}
------------------
_ZN2rc2fn8ConstantISt6vectorINS_10ShrinkableIdEESaIS4_EEEC2IS6_vEEOT_:
      112:   12:  explicit Constant(Arg &&arg)
      112:   13:      : m_value(std::forward<Arg>(arg)) {}
------------------
_ZN2rc2fn8ConstantIbEC2IbvEEOT_:
      106:   12:  explicit Constant(Arg &&arg)
      106:   13:      : m_value(std::forward<Arg>(arg)) {}
------------------
        -:   14:
        -:   15:  template <typename... Args>
    2431*:   16:  T operator()(Args &&... /*args*/) const {
    2431*:   17:    return m_value;
        -:   18:  }
------------------
_ZNK2rc2fn8ConstantINS_3SeqINS_10ShrinkableISt6vectorIdSaIdEEEEEEEclIJEEES8_DpOT_:
    #####:   16:  T operator()(Args &&... /*args*/) const {
    #####:   17:    return m_value;
        -:   18:  }
------------------
_ZNK2rc2fn8ConstantINS_3SeqINS_10ShrinkableISt5tupleIJSt6vectorIdSaIdEEEEEEEEEclIJEEESA_DpOT_:
    #####:   16:  T operator()(Args &&... /*args*/) const {
    #####:   17:    return m_value;
        -:   18:  }
------------------
_ZNK2rc2fn8ConstantISt6vectorINS_10ShrinkableIdEESaIS4_EEEclIJEEES6_DpOT_:
      119:   16:  T operator()(Args &&... /*args*/) const {
      119:   17:    return m_value;
        -:   18:  }
------------------
_ZNK2rc2fn8ConstantINS_3SeqINS_10ShrinkableIdEEEEEclIJEEES5_DpOT_:
    #####:   16:  T operator()(Args &&... /*args*/) const {
    #####:   17:    return m_value;
        -:   18:  }
------------------
_ZNK2rc2fn8ConstantIbEclIJRNS_10ShrinkableIdEEEEEbDpOT_:
     2312:   16:  T operator()(Args &&... /*args*/) const {
     2312:   17:    return m_value;
        -:   18:  }
------------------
        -:   19:
        -:   20:private:
        -:   21:  T m_value;
        -:   22:};
        -:   23:
        -:   24:template <typename T>
     218*:   25:Constant<Decay<T>> constant(T &&value) {
     218*:   26:  return Constant<Decay<T>>(std::forward<T>(value));
        -:   27:}
        -:   28:
        -:   29:} // namespace fn
        -:   30:} // namespace rc
