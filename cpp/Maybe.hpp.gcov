        -:    0:Source:libs/rapidcheck/include/rapidcheck/Maybe.hpp
        -:    0:Programs:6
        -:    1:#pragma once
        -:    2:
        -:    3:#include "rapidcheck/Show.h"
        -:    4:
        -:    5:namespace rc {
        -:    6:
        -:    7:template <typename T>
       19:    8:Maybe<T>::Maybe() noexcept : m_initialized(false) {}
------------------
_ZN2rc5MaybeINS_10ShrinkableINS_6detail3AnyEEEEC2Ev:
        1:    8:Maybe<T>::Maybe() noexcept : m_initialized(false) {}
------------------
_ZN2rc5MaybeINS_10ShrinkableISt5tupleIJSt6vectorIdSaIdEEEEEEEC2Ev:
        2:    8:Maybe<T>::Maybe() noexcept : m_initialized(false) {}
------------------
_ZN2rc5MaybeINS_10ShrinkableISt6vectorIdSaIdEEEEEC2Ev:
        1:    8:Maybe<T>::Maybe() noexcept : m_initialized(false) {}
------------------
_ZN2rc5MaybeINS_3gen6detail6RecipeEEC2Ev:
        5:    8:Maybe<T>::Maybe() noexcept : m_initialized(false) {}
------------------
_ZN2rc5MaybeINS_10ShrinkableIdEEEC2Ev:
        4:    8:Maybe<T>::Maybe() noexcept : m_initialized(false) {}
------------------
_ZN2rc5MaybeINS_10ShrinkableISt4pairINS_6detail12TaggedResultENS_3gen6detail6RecipeEEEEEC2Ev:
        1:    8:Maybe<T>::Maybe() noexcept : m_initialized(false) {}
------------------
_ZN2rc5MaybeISt6vectorINS_10ShrinkableIdEESaIS3_EEEC2Ev:
        4:    8:Maybe<T>::Maybe() noexcept : m_initialized(false) {}
------------------
_ZN2rc5MaybeINS_10ShrinkableISt6vectorINS1_IdEESaIS3_EEEEEC2Ev:
        1:    8:Maybe<T>::Maybe() noexcept : m_initialized(false) {}
------------------
        -:    9:
        -:   10:template <typename T>
       19:   11:Maybe<T>::Maybe(NothingType) noexcept : Maybe() {}
------------------
_ZN2rc5MaybeINS_10ShrinkableINS_6detail3AnyEEEEC2ENS_11NothingTypeE:
        1:   11:Maybe<T>::Maybe(NothingType) noexcept : Maybe() {}
------------------
_ZN2rc5MaybeINS_10ShrinkableISt5tupleIJSt6vectorIdSaIdEEEEEEEC2ENS_11NothingTypeE:
        2:   11:Maybe<T>::Maybe(NothingType) noexcept : Maybe() {}
------------------
_ZN2rc5MaybeINS_10ShrinkableISt6vectorIdSaIdEEEEEC2ENS_11NothingTypeE:
        1:   11:Maybe<T>::Maybe(NothingType) noexcept : Maybe() {}
------------------
_ZN2rc5MaybeINS_3gen6detail6RecipeEEC2ENS_11NothingTypeE:
        5:   11:Maybe<T>::Maybe(NothingType) noexcept : Maybe() {}
------------------
_ZN2rc5MaybeINS_10ShrinkableIdEEEC2ENS_11NothingTypeE:
        4:   11:Maybe<T>::Maybe(NothingType) noexcept : Maybe() {}
------------------
_ZN2rc5MaybeINS_10ShrinkableISt4pairINS_6detail12TaggedResultENS_3gen6detail6RecipeEEEEEC2ENS_11NothingTypeE:
        1:   11:Maybe<T>::Maybe(NothingType) noexcept : Maybe() {}
------------------
_ZN2rc5MaybeISt6vectorINS_10ShrinkableIdEESaIS3_EEEC2ENS_11NothingTypeE:
        4:   11:Maybe<T>::Maybe(NothingType) noexcept : Maybe() {}
------------------
_ZN2rc5MaybeINS_10ShrinkableISt6vectorINS1_IdEESaIS3_EEEEEC2ENS_11NothingTypeE:
        1:   11:Maybe<T>::Maybe(NothingType) noexcept : Maybe() {}
------------------
        -:   12:
        -:   13:template <typename T>
        -:   14:Maybe<T>::Maybe(const T &value)
        -:   15:    : m_initialized(false) {
        -:   16:  init(value);
        -:   17:}
        -:   18:
        -:   19:template <typename T>
       30:   20:Maybe<T>::Maybe(T &&value)
       30:   21:    : m_initialized(false) {
       30:   22:  init(std::move(value));
       30:   23:}
------------------
_ZN2rc5MaybeINS_10ShrinkableISt5tupleIJSt6vectorIdSaIdEEEEEEEC2EOS7_:
        5:   20:Maybe<T>::Maybe(T &&value)
        5:   21:    : m_initialized(false) {
        5:   22:  init(std::move(value));
        5:   23:}
------------------
_ZN2rc5MaybeINS_10ShrinkableINS_6detail3AnyEEEEC2EOS4_:
        5:   20:Maybe<T>::Maybe(T &&value)
        5:   21:    : m_initialized(false) {
        5:   22:  init(std::move(value));
        5:   23:}
------------------
_ZN2rc5MaybeINS_10ShrinkableISt6vectorIdSaIdEEEEEC2EOS5_:
        5:   20:Maybe<T>::Maybe(T &&value)
        5:   21:    : m_initialized(false) {
        5:   22:  init(std::move(value));
        5:   23:}
------------------
_ZN2rc5MaybeINS_10ShrinkableISt4pairINS_6detail12TaggedResultENS_3gen6detail6RecipeEEEEEC2EOS9_:
        5:   20:Maybe<T>::Maybe(T &&value)
        5:   21:    : m_initialized(false) {
        5:   22:  init(std::move(value));
        5:   23:}
------------------
_ZN2rc5MaybeISt6vectorINS_10ShrinkableIdEESaIS3_EEEC2EOS5_:
        5:   20:Maybe<T>::Maybe(T &&value)
        5:   21:    : m_initialized(false) {
        5:   22:  init(std::move(value));
        5:   23:}
------------------
_ZN2rc5MaybeINS_10ShrinkableISt6vectorINS1_IdEESaIS3_EEEEEC2EOS6_:
        5:   20:Maybe<T>::Maybe(T &&value)
        5:   21:    : m_initialized(false) {
        5:   22:  init(std::move(value));
        5:   23:}
------------------
        -:   24:
        -:   25:template <typename T>
        -:   26:Maybe<T> &Maybe<T>::operator=(const T &value) {
        -:   27:  if (m_initialized) {
        -:   28:    **this = value;
        -:   29:  } else {
        -:   30:    init(value);
        -:   31:  }
        -:   32:  return *this;
        -:   33:}
        -:   34:
        -:   35:template <typename T>
        -:   36:Maybe<T> &Maybe<T>::operator=(T &&value) {
        -:   37:  if (m_initialized) {
        -:   38:    **this = std::move(value);
        -:   39:  } else {
        -:   40:    init(std::move(value));
        -:   41:  }
        -:   42:  return *this;
        -:   43:}
        -:   44:
        -:   45:template <typename T>
        -:   46:Maybe<T> &Maybe<T>::operator=(NothingType) {
        -:   47:  reset();
        -:   48:  return *this;
        -:   49:}
        -:   50:
        -:   51:template <typename T>
        -:   52:template <typename... Args>
       42:   53:void Maybe<T>::init(Args &&... args) {
       42:   54:  reset();
       42:   55:  new (&m_storage) T(std::forward<Args>(args)...);
       42:   56:  m_initialized = true;
       42:   57:}
------------------
_ZN2rc5MaybeINS_10ShrinkableINS_6detail3AnyEEEE4initIJS4_EEEvDpOT_:
        5:   53:void Maybe<T>::init(Args &&... args) {
        5:   54:  reset();
        5:   55:  new (&m_storage) T(std::forward<Args>(args)...);
        5:   56:  m_initialized = true;
        5:   57:}
------------------
_ZN2rc5MaybeINS_10ShrinkableISt5tupleIJSt6vectorIdSaIdEEEEEEE4initIJS7_EEEvDpOT_:
       10:   53:void Maybe<T>::init(Args &&... args) {
       10:   54:  reset();
       10:   55:  new (&m_storage) T(std::forward<Args>(args)...);
       10:   56:  m_initialized = true;
       10:   57:}
------------------
_ZN2rc5MaybeINS_10ShrinkableISt6vectorIdSaIdEEEEE4initIJS5_EEEvDpOT_:
        5:   53:void Maybe<T>::init(Args &&... args) {
        5:   54:  reset();
        5:   55:  new (&m_storage) T(std::forward<Args>(args)...);
        5:   56:  m_initialized = true;
        5:   57:}
------------------
_ZN2rc5MaybeINS_10ShrinkableIdEEE4initIJS2_EEEvDpOT_:
        2:   53:void Maybe<T>::init(Args &&... args) {
        2:   54:  reset();
        2:   55:  new (&m_storage) T(std::forward<Args>(args)...);
        2:   56:  m_initialized = true;
        2:   57:}
------------------
_ZN2rc5MaybeINS_10ShrinkableISt4pairINS_6detail12TaggedResultENS_3gen6detail6RecipeEEEEE4initIJS9_EEEvDpOT_:
        5:   53:void Maybe<T>::init(Args &&... args) {
        5:   54:  reset();
        5:   55:  new (&m_storage) T(std::forward<Args>(args)...);
        5:   56:  m_initialized = true;
        5:   57:}
------------------
_ZN2rc5MaybeISt6vectorINS_10ShrinkableIdEESaIS3_EEE4initIJS5_EEEvDpOT_:
       10:   53:void Maybe<T>::init(Args &&... args) {
       10:   54:  reset();
       10:   55:  new (&m_storage) T(std::forward<Args>(args)...);
       10:   56:  m_initialized = true;
       10:   57:}
------------------
_ZN2rc5MaybeINS_10ShrinkableISt6vectorINS1_IdEESaIS3_EEEEE4initIJS6_EEEvDpOT_:
        5:   53:void Maybe<T>::init(Args &&... args) {
        5:   54:  reset();
        5:   55:  new (&m_storage) T(std::forward<Args>(args)...);
        5:   56:  m_initialized = true;
        5:   57:}
------------------
        -:   58:
        -:   59:template <typename T>
       42:   60:void Maybe<T>::reset() {
       42:   61:  if (m_initialized) {
    #####:   62:    m_initialized = false;
    #####:   63:    (**this).~T();
        -:   64:  }
       42:   65:}
------------------
_ZN2rc5MaybeINS_10ShrinkableINS_6detail3AnyEEEE5resetEv:
        5:   60:void Maybe<T>::reset() {
        5:   61:  if (m_initialized) {
    #####:   62:    m_initialized = false;
    #####:   63:    (**this).~T();
        -:   64:  }
        5:   65:}
------------------
_ZN2rc5MaybeINS_10ShrinkableISt5tupleIJSt6vectorIdSaIdEEEEEEE5resetEv:
       10:   60:void Maybe<T>::reset() {
       10:   61:  if (m_initialized) {
    #####:   62:    m_initialized = false;
    #####:   63:    (**this).~T();
        -:   64:  }
       10:   65:}
------------------
_ZN2rc5MaybeINS_10ShrinkableISt6vectorIdSaIdEEEEE5resetEv:
        5:   60:void Maybe<T>::reset() {
        5:   61:  if (m_initialized) {
    #####:   62:    m_initialized = false;
    #####:   63:    (**this).~T();
        -:   64:  }
        5:   65:}
------------------
_ZN2rc5MaybeINS_10ShrinkableIdEEE5resetEv:
        2:   60:void Maybe<T>::reset() {
        2:   61:  if (m_initialized) {
    #####:   62:    m_initialized = false;
    #####:   63:    (**this).~T();
        -:   64:  }
        2:   65:}
------------------
_ZN2rc5MaybeINS_10ShrinkableISt4pairINS_6detail12TaggedResultENS_3gen6detail6RecipeEEEEE5resetEv:
        5:   60:void Maybe<T>::reset() {
        5:   61:  if (m_initialized) {
    #####:   62:    m_initialized = false;
    #####:   63:    (**this).~T();
        -:   64:  }
        5:   65:}
------------------
_ZN2rc5MaybeISt6vectorINS_10ShrinkableIdEESaIS3_EEE5resetEv:
       10:   60:void Maybe<T>::reset() {
       10:   61:  if (m_initialized) {
    #####:   62:    m_initialized = false;
    #####:   63:    (**this).~T();
        -:   64:  }
       10:   65:}
------------------
_ZN2rc5MaybeINS_10ShrinkableISt6vectorINS1_IdEESaIS3_EEEEE5resetEv:
        5:   60:void Maybe<T>::reset() {
        5:   61:  if (m_initialized) {
    #####:   62:    m_initialized = false;
    #####:   63:    (**this).~T();
        -:   64:  }
        5:   65:}
------------------
        -:   66:
        -:   67:template <typename T>
      104:   68:T &Maybe<T>::operator*() & {
      104:   69:  return *reinterpret_cast<T *>(&m_storage);
        -:   70:}
------------------
_ZNR2rc5MaybeINS_10ShrinkableINS_6detail3AnyEEEEdeEv:
       10:   68:T &Maybe<T>::operator*() & {
       10:   69:  return *reinterpret_cast<T *>(&m_storage);
        -:   70:}
------------------
_ZNR2rc5MaybeINS_10ShrinkableISt5tupleIJSt6vectorIdSaIdEEEEEEEdeEv:
       20:   68:T &Maybe<T>::operator*() & {
       20:   69:  return *reinterpret_cast<T *>(&m_storage);
        -:   70:}
------------------
_ZNR2rc5MaybeINS_10ShrinkableISt6vectorIdSaIdEEEEEdeEv:
       10:   68:T &Maybe<T>::operator*() & {
       10:   69:  return *reinterpret_cast<T *>(&m_storage);
        -:   70:}
------------------
_ZNR2rc5MaybeINS_10ShrinkableISt4pairINS_6detail12TaggedResultENS_3gen6detail6RecipeEEEEEdeEv:
       10:   68:T &Maybe<T>::operator*() & {
       10:   69:  return *reinterpret_cast<T *>(&m_storage);
        -:   70:}
------------------
_ZNR2rc5MaybeINS_3gen6detail6RecipeEEdeEv:
       20:   68:T &Maybe<T>::operator*() & {
       20:   69:  return *reinterpret_cast<T *>(&m_storage);
        -:   70:}
------------------
_ZNR2rc5MaybeINS_10ShrinkableIdEEEdeEv:
        4:   68:T &Maybe<T>::operator*() & {
        4:   69:  return *reinterpret_cast<T *>(&m_storage);
        -:   70:}
------------------
_ZNR2rc5MaybeINS_10ShrinkableISt6vectorINS1_IdEESaIS3_EEEEEdeEv:
       10:   68:T &Maybe<T>::operator*() & {
       10:   69:  return *reinterpret_cast<T *>(&m_storage);
        -:   70:}
------------------
_ZNR2rc5MaybeISt6vectorINS_10ShrinkableIdEESaIS3_EEEdeEv:
       20:   68:T &Maybe<T>::operator*() & {
       20:   69:  return *reinterpret_cast<T *>(&m_storage);
        -:   70:}
------------------
        -:   71:
        -:   72:template <typename T>
        -:   73:const T &Maybe<T>::operator*() const & {
        -:   74:  return *reinterpret_cast<const T *>(&m_storage);
        -:   75:}
        -:   76:
        -:   77:template <typename T>
        -:   78:T &&Maybe<T>::operator*() && {
        -:   79:  return std::move(*reinterpret_cast<T *>(&m_storage));
        -:   80:}
        -:   81:
        -:   82:template <typename T>
        -:   83:T *Maybe<T>::operator->() {
        -:   84:  return reinterpret_cast<T *>(&m_storage);
        -:   85:}
        -:   86:
        -:   87:template <typename T>
        -:   88:const T *Maybe<T>::operator->() const {
        -:   89:  return reinterpret_cast<const T *>(&m_storage);
        -:   90:}
        -:   91:
        -:   92:template <typename T>
       59:   93:Maybe<T>::operator bool() const {
       59:   94:  return m_initialized;
        -:   95:}
------------------
_ZNK2rc5MaybeINS_10ShrinkableISt6vectorIdSaIdEEEEEcvbEv:
        6:   93:Maybe<T>::operator bool() const {
        6:   94:  return m_initialized;
        -:   95:}
------------------
_ZNK2rc5MaybeINS_10ShrinkableISt5tupleIJSt6vectorIdSaIdEEEEEEEcvbEv:
       12:   93:Maybe<T>::operator bool() const {
       12:   94:  return m_initialized;
        -:   95:}
------------------
_ZNK2rc5MaybeINS_10ShrinkableISt6vectorINS1_IdEESaIS3_EEEEEcvbEv:
        6:   93:Maybe<T>::operator bool() const {
        6:   94:  return m_initialized;
        -:   95:}
------------------
_ZNK2rc5MaybeINS_3gen6detail6RecipeEEcvbEv:
       15:   93:Maybe<T>::operator bool() const {
       15:   94:  return m_initialized;
        -:   95:}
------------------
_ZNK2rc5MaybeINS_10ShrinkableIdEEEcvbEv:
        6:   93:Maybe<T>::operator bool() const {
        6:   94:  return m_initialized;
        -:   95:}
------------------
_ZNK2rc5MaybeISt6vectorINS_10ShrinkableIdEESaIS3_EEEcvbEv:
       14:   93:Maybe<T>::operator bool() const {
       14:   94:  return m_initialized;
        -:   95:}
------------------
        -:   96:
        -:   97:template <typename T>
        -:   98:Maybe<T>::Maybe(const Maybe &other) noexcept(
        -:   99:    std::is_nothrow_copy_constructible<T>::value)
        -:  100:    : m_initialized(false) {
        -:  101:  if (other.m_initialized) {
        -:  102:    init(*other);
        -:  103:  }
        -:  104:}
        -:  105:
        -:  106:template <typename T>
        -:  107:Maybe<T> &Maybe<T>::operator=(const Maybe &rhs) noexcept(
        -:  108:    std::is_nothrow_copy_constructible<T>::value
        -:  109:        &&std::is_nothrow_copy_assignable<T>::value) {
        -:  110:  if (rhs.m_initialized) {
        -:  111:    *this = *rhs;
        -:  112:  } else {
        -:  113:    reset();
        -:  114:  }
        -:  115:
        -:  116:  return *this;
        -:  117:}
        -:  118:
        -:  119:template <typename T>
       11:  120:Maybe<T>::Maybe(Maybe &&other) noexcept(
        -:  121:    std::is_nothrow_move_constructible<T>::value)
       11:  122:    : m_initialized(false) {
       11:  123:  if (other.m_initialized) {
       11:  124:    init(std::move(*other));
        -:  125:  }
       11:  126:}
------------------
_ZN2rc5MaybeINS_10ShrinkableISt5tupleIJSt6vectorIdSaIdEEEEEEEC2EOS8_:
        5:  120:Maybe<T>::Maybe(Maybe &&other) noexcept(
        -:  121:    std::is_nothrow_move_constructible<T>::value)
        5:  122:    : m_initialized(false) {
        5:  123:  if (other.m_initialized) {
        5:  124:    init(std::move(*other));
        -:  125:  }
        5:  126:}
------------------
_ZN2rc5MaybeINS_10ShrinkableIdEEEC2EOS3_:
        1:  120:Maybe<T>::Maybe(Maybe &&other) noexcept(
        -:  121:    std::is_nothrow_move_constructible<T>::value)
        1:  122:    : m_initialized(false) {
        1:  123:  if (other.m_initialized) {
        1:  124:    init(std::move(*other));
        -:  125:  }
        1:  126:}
------------------
_ZN2rc5MaybeISt6vectorINS_10ShrinkableIdEESaIS3_EEEC2EOS6_:
        5:  120:Maybe<T>::Maybe(Maybe &&other) noexcept(
        -:  121:    std::is_nothrow_move_constructible<T>::value)
        5:  122:    : m_initialized(false) {
        5:  123:  if (other.m_initialized) {
        5:  124:    init(std::move(*other));
        -:  125:  }
        5:  126:}
------------------
        -:  127:
        -:  128:template <typename T>
        -:  129:Maybe<T> &Maybe<T>::
        -:  130:operator=(Maybe &&rhs) noexcept(std::is_nothrow_move_constructible<T>::value &&
        -:  131:                                    std::is_nothrow_move_assignable<T>::value) {
        -:  132:  if (rhs.m_initialized) {
        -:  133:    *this = std::move(*rhs);
        -:  134:  } else {
        -:  135:    reset();
        -:  136:  }
        -:  137:
        -:  138:  return *this;
        -:  139:}
        -:  140:
        -:  141:template <typename T>
       59:  142:Maybe<T>::~Maybe() {
       59:  143:  if (m_initialized) {
       42:  144:    (**this).~T();
        -:  145:  }
       59:  146:}
------------------
_ZN2rc5MaybeINS_10ShrinkableISt5tupleIJSt6vectorIdSaIdEEEEEEED2Ev:
       12:  142:Maybe<T>::~Maybe() {
       12:  143:  if (m_initialized) {
       10:  144:    (**this).~T();
        -:  145:  }
       12:  146:}
------------------
_ZN2rc5MaybeINS_10ShrinkableISt6vectorIdSaIdEEEEED2Ev:
        6:  142:Maybe<T>::~Maybe() {
        6:  143:  if (m_initialized) {
        5:  144:    (**this).~T();
        -:  145:  }
        6:  146:}
------------------
_ZN2rc5MaybeINS_3gen6detail6RecipeEED2Ev:
       15:  142:Maybe<T>::~Maybe() {
       15:  143:  if (m_initialized) {
       10:  144:    (**this).~T();
        -:  145:  }
       15:  146:}
------------------
_ZN2rc5MaybeINS_10ShrinkableIdEEED2Ev:
        6:  142:Maybe<T>::~Maybe() {
        6:  143:  if (m_initialized) {
        2:  144:    (**this).~T();
        -:  145:  }
        6:  146:}
------------------
_ZN2rc5MaybeISt6vectorINS_10ShrinkableIdEESaIS3_EEED2Ev:
       14:  142:Maybe<T>::~Maybe() {
       14:  143:  if (m_initialized) {
       10:  144:    (**this).~T();
        -:  145:  }
       14:  146:}
------------------
_ZN2rc5MaybeINS_10ShrinkableISt6vectorINS1_IdEESaIS3_EEEEED2Ev:
        6:  142:Maybe<T>::~Maybe() {
        6:  143:  if (m_initialized) {
        5:  144:    (**this).~T();
        -:  145:  }
        6:  146:}
------------------
        -:  147:
        -:  148:template <typename T, typename U>
        -:  149:bool operator==(const Maybe<T> &lhs, const Maybe<U> &rhs) {
        -:  150:  if (!lhs && !rhs) {
        -:  151:    return true;
        -:  152:  } else if (lhs && rhs) {
        -:  153:    return *lhs == *rhs;
        -:  154:  }
        -:  155:
        -:  156:  return false;
        -:  157:}
        -:  158:
        -:  159:template <typename T, typename U>
        -:  160:bool operator!=(const Maybe<T> &lhs, const Maybe<U> &rhs) {
        -:  161:  return !(lhs == rhs);
        -:  162:}
        -:  163:
        -:  164:template <typename T>
        -:  165:std::ostream &operator<<(std::ostream &os, const Maybe<T> &value) {
        -:  166:  if (value) {
        -:  167:    show(*value, os);
        -:  168:  } else {
        -:  169:    os << "Nothing";
        -:  170:  }
        -:  171:  return os;
        -:  172:}
        -:  173:
        -:  174:} // namespace rc
