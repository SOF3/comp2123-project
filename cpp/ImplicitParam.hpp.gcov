        -:    0:Source:libs/rapidcheck/include/rapidcheck/detail/ImplicitParam.hpp
        -:    0:Programs:6
        -:    1:#pragma once
        -:    2:
        -:    3:#include <iostream>
        -:    4:#include "rapidcheck/Show.h"
        -:    5:
        -:    6:namespace rc {
        -:    7:namespace detail {
        -:    8:
        -:    9:template <typename Param>
      226:   10:ImplicitParam<Param>::ImplicitParam(ValueType value) {
      226:   11:  m_stack.push(
      226:   12:      std::make_pair(std::move(value), ImplicitScope::m_scopes.size()));
      226:   13:}
------------------
_ZN2rc6detail13ImplicitParamINS0_5param22CurrentPropertyContextEEC2EPNS0_15PropertyContextE:
      113:   10:ImplicitParam<Param>::ImplicitParam(ValueType value) {
      113:   11:  m_stack.push(
      113:   12:      std::make_pair(std::move(value), ImplicitScope::m_scopes.size()));
      113:   13:}
------------------
_ZN2rc6detail13ImplicitParamINS_3gen6detail5param14CurrentHandlerEEC2EPNS3_17GenerationHandlerE:
      113:   10:ImplicitParam<Param>::ImplicitParam(ValueType value) {
      113:   11:  m_stack.push(
      113:   12:      std::make_pair(std::move(value), ImplicitScope::m_scopes.size()));
      113:   13:}
------------------
        -:   14:
        -:   15:template <typename StackT, StackT *stack>
    #####:   16:void popStackBinding() {
    #####:   17:  stack->pop();
    #####:   18:}
        -:   19:
        -:   20:template <typename Param>
      113:   21:typename ImplicitParam<Param>::ValueType &ImplicitParam<Param>::value() {
      113:   22:  const auto scopeLevel = ImplicitScope::m_scopes.size();
     113*:   23:  if (m_stack.empty() || (m_stack.top().second < scopeLevel)) {
    #####:   24:    m_stack.push(
    #####:   25:        std::make_pair(Param::defaultValue(), ImplicitScope::m_scopes.size()));
    #####:   26:    if (!ImplicitScope::m_scopes.empty()) {
    #####:   27:      ImplicitScope::m_scopes.top().push_back(
        -:   28:          popStackBinding<StackT, &m_stack>);
        -:   29:    }
        -:   30:  }
        -:   31:
      113:   32:  return m_stack.top().first;
        -:   33:}
        -:   34:
        -:   35:template <typename Param>
      226:   36:ImplicitParam<Param>::~ImplicitParam() {
      226:   37:  m_stack.pop();
      226:   38:}
------------------
_ZN2rc6detail13ImplicitParamINS0_5param22CurrentPropertyContextEED2Ev:
      113:   36:ImplicitParam<Param>::~ImplicitParam() {
      113:   37:  m_stack.pop();
      113:   38:}
------------------
_ZN2rc6detail13ImplicitParamINS_3gen6detail5param14CurrentHandlerEED2Ev:
      113:   36:ImplicitParam<Param>::~ImplicitParam() {
      113:   37:  m_stack.pop();
      113:   38:}
------------------
        -:   39:
        -:   40:template <typename Param>
        -:   41:typename ImplicitParam<Param>::StackT ImplicitParam<Param>::m_stack;
        -:   42:
        -:   43:} // namespace detail
        -:   44:} // namespace rc
