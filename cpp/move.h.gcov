        -:    0:Source:/usr/include/c++/8/bits/move.h
        -:    0:Programs:6
        -:    1:// Move, forward and identity for C++11 + swap -*- C++ -*-
        -:    2:
        -:    3:// Copyright (C) 2007-2018 Free Software Foundation, Inc.
        -:    4://
        -:    5:// This file is part of the GNU ISO C++ Library.  This library is free
        -:    6:// software; you can redistribute it and/or modify it under the
        -:    7:// terms of the GNU General Public License as published by the
        -:    8:// Free Software Foundation; either version 3, or (at your option)
        -:    9:// any later version.
        -:   10:
        -:   11:// This library is distributed in the hope that it will be useful,
        -:   12:// but WITHOUT ANY WARRANTY; without even the implied warranty of
        -:   13:// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
        -:   14:// GNU General Public License for more details.
        -:   15:
        -:   16:// Under Section 7 of GPL version 3, you are granted additional
        -:   17:// permissions described in the GCC Runtime Library Exception, version
        -:   18:// 3.1, as published by the Free Software Foundation.
        -:   19:
        -:   20:// You should have received a copy of the GNU General Public License and
        -:   21:// a copy of the GCC Runtime Library Exception along with this program;
        -:   22:// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
        -:   23:// <http://www.gnu.org/licenses/>.
        -:   24:
        -:   25:/** @file bits/move.h
        -:   26: *  This is an internal header file, included by other library headers.
        -:   27: *  Do not attempt to use it directly. @headername{utility}
        -:   28: */
        -:   29:
        -:   30:#ifndef _MOVE_H
        -:   31:#define _MOVE_H 1
        -:   32:
        -:   33:#include <bits/c++config.h>
        -:   34:#include <bits/concept_check.h>
        -:   35:
        -:   36:namespace std _GLIBCXX_VISIBILITY(default)
        -:   37:{
        -:   38:_GLIBCXX_BEGIN_NAMESPACE_VERSION
        -:   39:
        -:   40:  // Used, in C++03 mode too, by allocators, etc.
        -:   41:  /**
        -:   42:   *  @brief Same as C++11 std::addressof
        -:   43:   *  @ingroup utilities
        -:   44:   */
        -:   45:  template<typename _Tp>
        -:   46:    inline _GLIBCXX_CONSTEXPR _Tp*
    8626*:   47:    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    8626*:   48:    { return __builtin_addressof(__r); }
------------------
_ZSt11__addressofISt4pairIPN2rc6detail15PropertyContextEmEEPT_RS6_:
    #####:   47:    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    #####:   48:    { return __builtin_addressof(__r); }
------------------
_ZSt11__addressofIN2rc10ShrinkableIdEEEPT_RS3_:
     7633:   47:    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
     7633:   48:    { return __builtin_addressof(__r); }
------------------
_ZSt11__addressofISt4pairIPN2rc3gen6detail17GenerationHandlerEmEEPT_RS7_:
    #####:   47:    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    #####:   48:    { return __builtin_addressof(__r); }
------------------
_ZSt11__addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_:
      116:   47:    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
      116:   48:    { return __builtin_addressof(__r); }
------------------
_ZSt11__addressofISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_EEPT_RS8_:
        5:   47:    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
        5:   48:    { return __builtin_addressof(__r); }
------------------
_ZSt11__addressofIN2rc3gen6detail6Recipe10IngredientEEPT_RS5_:
      872:   47:    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
      872:   48:    { return __builtin_addressof(__r); }
------------------
        -:   49:
        -:   50:#if __cplusplus >= 201103L
        -:   51:
        -:   52:_GLIBCXX_END_NAMESPACE_VERSION
        -:   53:} // namespace
        -:   54:
        -:   55:#include <type_traits> // Brings in std::declval too.
        -:   56:
        -:   57:namespace std _GLIBCXX_VISIBILITY(default)
        -:   58:{
        -:   59:_GLIBCXX_BEGIN_NAMESPACE_VERSION
        -:   60:
        -:   61:  /**
        -:   62:   *  @addtogroup utilities
        -:   63:   *  @{
        -:   64:   */
        -:   65:
        -:   66:  /**
        -:   67:   *  @brief  Forward an lvalue.
        -:   68:   *  @return The parameter cast to the specified type.
        -:   69:   *
        -:   70:   *  This function is used to implement "perfect forwarding".
        -:   71:   */
        -:   72:  template<typename _Tp>
        -:   73:    constexpr _Tp&&
   28461*:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   28461*:   75:    { return static_cast<_Tp&&>(__t); }
------------------
_ZSt7forwardIPFvvEEOT_RNSt16remove_referenceIS2_E4typeE:
    #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    #####:   75:    { return static_cast<_Tp&&>(__t); }
------------------
_ZSt7forwardISt14default_deleteIN2rc3SeqINS1_3gen6detail6RecipeEE8ISeqImplEEEOT_RNSt16remove_referenceIS9_E4typeE:
       41:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
       41:   75:    { return static_cast<_Tp&&>(__t); }
------------------
_ZSt7forwardIN2rc3SeqINS0_3gen6detail6RecipeEEEEOT_RNSt16remove_referenceIS6_E4typeE:
        6:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
        6:   75:    { return static_cast<_Tp&&>(__t); }
------------------
_ZSt7forwardIRKN2rc6detail15PropertyAdapterIZ10testSciNotvEUlRKSt6vectorIdSaIdEEE0_FvS7_EEEEOT_RNSt16remove_referenceISD_E4typeE:
      100:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
      100:   75:    { return static_cast<_Tp&&>(__t); }
------------------
_ZSt7forwardIRKN2rc3gen6detail6Recipe10IngredientEEOT_RNSt16remove_referenceIS7_E4typeE:
      382:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
      382:   75:    { return static_cast<_Tp&&>(__t); }
------------------
_ZSt7forwardIPFN2rc6detail3AnyEOSt5tupleIJSt6vectorIdSaIdEEEEEEOT_RNSt16remove_referenceISB_E4typeE:
      232:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
      232:   75:    { return static_cast<_Tp&&>(__t); }
------------------
_ZSt7forwardISt6vectorIdSaIdEEEOT_RNSt16remove_referenceIS3_E4typeE:
      934:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
      934:   75:    { return static_cast<_Tp&&>(__t); }
------------------
_ZSt7forwardIRPN2rc3SeqINS0_3gen6detail6RecipeEE8ISeqImplEEOT_RNSt16remove_referenceIS9_E4typeE:
       18:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
       18:   75:    { return static_cast<_Tp&&>(__t); }
------------------
_ZSt7forwardISt4pairIPN2rc3gen6detail17GenerationHandlerEmEEOT_RNSt16remove_referenceIS7_E4typeE:
      349:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
      349:   75:    { return static_cast<_Tp&&>(__t); }
------------------
_ZSt7forwardIN2rc3gen6detail6MapGenISt5tupleIJSt6vectorIdSaIdEEEEPFNS0_6detail3AnyEOS8_EEEEOT_RNSt16remove_referenceISF_E4typeE:
      232:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
      232:   75:    { return static_cast<_Tp&&>(__t); }
------------------
_ZSt7forwardIRKN2rc6detail15PropertyAdapterIZ10testSciNotvEUlRKSt6vectorIdSaIdEEE_FvS7_EEEEOT_RNSt16remove_referenceISD_E4typeE:
       16:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
       16:   75:    { return static_cast<_Tp&&>(__t); }
------------------
_ZSt7forwardIRKSt6vectorIdSaIdEEEOT_RNSt16remove_referenceIS5_E4typeE:
      116:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
      116:   75:    { return static_cast<_Tp&&>(__t); }
------------------
_ZSt7forwardIN2rc3GenISt6vectorIdSaIdEEEEEOT_RNSt16remove_referenceIS6_E4typeE:
        6:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
        6:   75:    { return static_cast<_Tp&&>(__t); }
------------------
_ZSt7forwardIN2rc3gen6detail8TupleGenINS0_6detail11IntSequenceImJLm0EEEEJSt6vectorIdSaIdEEEEEEOT_RNSt16remove_referenceISB_E4typeE:
        2:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
        2:   75:    { return static_cast<_Tp&&>(__t); }
------------------
_ZSt7forwardIPN2rc6detail15PropertyContextEEOT_RNSt16remove_referenceIS4_E4typeE:
      232:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
      232:   75:    { return static_cast<_Tp&&>(__t); }
------------------
_ZSt7forwardISt4pairIPN2rc6detail15PropertyContextEmEEOT_RNSt16remove_referenceIS6_E4typeE:
      349:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
      349:   75:    { return static_cast<_Tp&&>(__t); }
------------------
_ZSt7forwardIZN2rc3gen9containerISt6vectorIdSaIdEEJdEEENS0_3GenIT_EEDpNS6_IT0_EEEUlRKNS0_6RandomEiE_EOS7_RNSt16remove_referenceIS7_E4typeE:
        2:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
        2:   75:    { return static_cast<_Tp&&>(__t); }
------------------
_ZSt7forwardISt6vectorIN2rc10ShrinkableIdEESaIS3_EEEOT_RNSt16remove_referenceIS6_E4typeE:
      367:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
      367:   75:    { return static_cast<_Tp&&>(__t); }
------------------
_ZSt7forwardIPFSt6vectorIdSaIdEERKS0_IN2rc10ShrinkableIdEESaIS5_EEEEOT_RNSt16remove_referenceISC_E4typeE:
      432:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
      432:   75:    { return static_cast<_Tp&&>(__t); }
------------------
_ZSt7forwardIZN2rc3gen6detail20shrinkableWithRecipeINS0_6detail15PropertyAdapterIZ10testSciNotvEUlRKSt6vectorIdSaIdEEE_FvSA_EEEEENS0_10ShrinkableISt4pairINS4_18FunctionTraitsImplINSt5decayIT_E4typeEE10ReturnTypeENS2_6RecipeEEEESI_SN_EUlOSF_INS4_12TaggedResultESN_EE0_EOSI_RNSt16remove_referenceISI_E4typeE:
       48:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
       48:   75:    { return static_cast<_Tp&&>(__t); }
------------------
_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE:
      219:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
      219:   75:    { return static_cast<_Tp&&>(__t); }
------------------
_ZSt7forwardImEOT_RNSt16remove_referenceIS0_E4typeE:
      467:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
      467:   75:    { return static_cast<_Tp&&>(__t); }
------------------
_ZSt7forwardIRFN2rc10ShrinkableIdEERKNS0_6RandomEiEEOT_RNSt16remove_referenceIS8_E4typeE:
        2:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
        2:   75:    { return static_cast<_Tp&&>(__t); }
------------------
_ZSt7forwardIZ10testSciNotvEUlRKSt6vectorIdSaIdEEE_EOT_RNSt16remove_referenceIS6_E4typeE:
        4:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
        4:   75:    { return static_cast<_Tp&&>(__t); }
------------------
_ZSt7forwardIZ10testSciNotvEUlRKSt6vectorIdSaIdEEE0_EOT_RNSt16remove_referenceIS6_E4typeE:
        4:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
        4:   75:    { return static_cast<_Tp&&>(__t); }
------------------
_ZSt7forwardIRN2rc6detail12TestMetadataEEOT_RNSt16remove_referenceIS4_E4typeE:
        2:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
        2:   75:    { return static_cast<_Tp&&>(__t); }
------------------
_ZSt7forwardIZN2rc3gen6detail7execRawINS0_6detail15PropertyAdapterIZ10testSciNotvEUlRKSt6vectorIdSaIdEEE_FvSA_EEEEENS0_3GenISt4pairINS4_18FunctionTraitsImplINSt5decayIT_E4typeEE10ReturnTypeENS2_6RecipeEEEESI_EUlRKNS0_6RandomEiE_EOSI_RNSt16remove_referenceISI_E4typeE:
        2:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
        2:   75:    { return static_cast<_Tp&&>(__t); }
------------------
_ZSt7forwardIZN2rc3gen6detail7execRawINS0_6detail15PropertyAdapterIZ10testSciNotvEUlRKSt6vectorIdSaIdEEE0_FvSA_EEEEENS0_3GenISt4pairINS4_18FunctionTraitsImplINSt5decayIT_E4typeEE10ReturnTypeENS2_6RecipeEEEESI_EUlRKNS0_6RandomEiE_EOSI_RNSt16remove_referenceISI_E4typeE:
        2:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
        2:   75:    { return static_cast<_Tp&&>(__t); }
------------------
_ZSt7forwardIZN2rc3gen6detail20shrinkableWithRecipeINS0_6detail15PropertyAdapterIZ10testSciNotvEUlRKSt6vectorIdSaIdEEE_FvSA_EEEEENS0_10ShrinkableISt4pairINS4_18FunctionTraitsImplINSt5decayIT_E4typeEE10ReturnTypeENS2_6RecipeEEEESI_SN_EUlvE_EOSI_RNSt16remove_referenceISI_E4typeE:
       48:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
       48:   75:    { return static_cast<_Tp&&>(__t); }
------------------
_ZSt7forwardISt14default_deleteIN2rc3SeqISt6vectorINS1_10ShrinkableIdEESaIS5_EEE8ISeqImplEEEOT_RNSt16remove_referenceISB_E4typeE:
      109:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
      109:   75:    { return static_cast<_Tp&&>(__t); }
------------------
_ZSt7forwardIZN2rc3gen6detail20shrinkableWithRecipeINS0_6detail15PropertyAdapterIZ10testSciNotvEUlRKSt6vectorIdSaIdEEE0_FvSA_EEEEENS0_10ShrinkableISt4pairINS4_18FunctionTraitsImplINSt5decayIT_E4typeEE10ReturnTypeENS2_6RecipeEEEESI_SN_EUlvE_EOSI_RNSt16remove_referenceISI_E4typeE:
      400:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
      400:   75:    { return static_cast<_Tp&&>(__t); }
------------------
_ZSt7forwardIZN2rc3gen6detail20shrinkableWithRecipeINS0_6detail15PropertyAdapterIZ10testSciNotvEUlRKSt6vectorIdSaIdEEE0_FvSA_EEEEENS0_10ShrinkableISt4pairINS4_18FunctionTraitsImplINSt5decayIT_E4typeEE10ReturnTypeENS2_6RecipeEEEESI_SN_EUlOSF_INS4_12TaggedResultESN_EE0_EOSI_RNSt16remove_referenceISI_E4typeE:
      400:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
      400:   75:    { return static_cast<_Tp&&>(__t); }
------------------
_ZSt7forwardIN2rc6detail12TaggedResultEEOT_RNSt16remove_referenceIS3_E4typeE:
      232:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
      232:   75:    { return static_cast<_Tp&&>(__t); }
------------------
_ZSt7forwardIN2rc3gen6detail6RecipeEEOT_RNSt16remove_referenceIS4_E4typeE:
      242:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
      242:   75:    { return static_cast<_Tp&&>(__t); }
------------------
_ZSt7forwardIZN2rc3gen6detail15shrinksOfRecipeINS0_6detail15PropertyAdapterIZ10testSciNotvEUlRKSt6vectorIdSaIdEEE_FvSA_EEEEENS0_3SeqINS0_10ShrinkableISt4pairINS4_18FunctionTraitsImplINSt5decayIT_E4typeEE10ReturnTypeENS2_6RecipeEEEEEESJ_SO_EUlOSO_E_EOSJ_RNSt16remove_referenceISJ_E4typeE:
       12:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
       12:   75:    { return static_cast<_Tp&&>(__t); }
------------------
_ZSt7forwardIZN2rc3gen6detail15shrinksOfRecipeINS0_6detail15PropertyAdapterIZ10testSciNotvEUlRKSt6vectorIdSaIdEEE0_FvSA_EEEEENS0_3SeqINS0_10ShrinkableISt4pairINS4_18FunctionTraitsImplINSt5decayIT_E4typeEE10ReturnTypeENS2_6RecipeEEEEEESJ_SO_EUlOSO_E_EOSJ_RNSt16remove_referenceISJ_E4typeE:
    #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    #####:   75:    { return static_cast<_Tp&&>(__t); }
------------------
_ZSt7forwardIPN2rc3gen6detail17GenerationHandlerEEOT_RNSt16remove_referenceIS5_E4typeE:
      232:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
      232:   75:    { return static_cast<_Tp&&>(__t); }
------------------
_ZSt7forwardISt5tupleIJSt6vectorIdSaIdEEEEEOT_RNSt16remove_referenceIS5_E4typeE:
      350:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
      350:   75:    { return static_cast<_Tp&&>(__t); }
------------------
_ZSt7forwardIN2rc3SeqINS0_10ShrinkableISt6vectorIdSaIdEEEEEEEOT_RNSt16remove_referenceIS8_E4typeE:
    #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    #####:   75:    { return static_cast<_Tp&&>(__t); }
------------------
_ZSt7forwardISt14default_deleteIN2rc3SeqINS1_10ShrinkableISt6vectorIdSaIdEEEEE8ISeqImplEEEOT_RNSt16remove_referenceISB_E4typeE:
        1:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
        1:   75:    { return static_cast<_Tp&&>(__t); }
------------------
_ZSt7forwardIN2rc10ShrinkableISt6vectorIdSaIdEEEEEOT_RNSt16remove_referenceIS6_E4typeE:
      683:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
      683:   75:    { return static_cast<_Tp&&>(__t); }
------------------
_ZSt7forwardIRKPFN2rc6detail3AnyEOSt5tupleIJSt6vectorIdSaIdEEEEEEOT_RNSt16remove_referenceISD_E4typeE:
      452:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
      452:   75:    { return static_cast<_Tp&&>(__t); }
------------------
_ZSt7forwardIN2rc10ShrinkableISt4pairINS0_6detail12TaggedResultENS0_3gen6detail6RecipeEEEEEOT_RNSt16remove_referenceISA_E4typeE:
      229:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
      229:   75:    { return static_cast<_Tp&&>(__t); }
------------------
_ZSt7forwardIN2rc3SeqINS0_10ShrinkableISt6vectorINS2_IdEESaIS4_EEEEEEEOT_RNSt16remove_referenceIS9_E4typeE:
        6:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
        6:   75:    { return static_cast<_Tp&&>(__t); }
------------------
_ZSt7forwardIRPN2rc3SeqINS0_10ShrinkableISt6vectorIdSaIdEEEEE8ISeqImplEEOT_RNSt16remove_referenceISB_E4typeE:
    #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    #####:   75:    { return static_cast<_Tp&&>(__t); }
------------------
_ZSt7forwardIZNK2rc3GenISt6vectorIdSaIdEEEclERKNS0_6RandomEiEUlvE_EOT_RNSt16remove_referenceISA_E4typeE:
    #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    #####:   75:    { return static_cast<_Tp&&>(__t); }
------------------
_ZSt7forwardIZNK2rc3GenISt5tupleIJSt6vectorIdSaIdEEEEEclERKNS0_6RandomEiEUlvE_EOT_RNSt16remove_referenceISC_E4typeE:
    #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    #####:   75:    { return static_cast<_Tp&&>(__t); }
------------------
_ZSt7forwardIN2rc10ShrinkableISt5tupleIJSt6vectorIdSaIdEEEEEEEOT_RNSt16remove_referenceIS8_E4typeE:
      236:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
      236:   75:    { return static_cast<_Tp&&>(__t); }
------------------
_ZSt7forwardIZNK2rc10shrinkable6detail13MapShrinkableISt6vectorINS0_10ShrinkableIdEESaIS6_EEPFS4_IdSaIdEERKS8_EE7shrinksEvEUlONS5_IS8_EEE_EOT_RNSt16remove_referenceISJ_E4typeE:
       12:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
       12:   75:    { return static_cast<_Tp&&>(__t); }
------------------
_ZSt7forwardIN2rc2fn8ConstantINS0_3SeqINS0_10ShrinkableISt6vectorIdSaIdEEEEEEEEEOT_RNSt16remove_referenceISB_E4typeE:
    #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    #####:   75:    { return static_cast<_Tp&&>(__t); }
------------------
_ZSt7forwardIN2rc3SeqINS0_10ShrinkableISt5tupleIJSt6vectorIdSaIdEEEEEEEEEOT_RNSt16remove_referenceISA_E4typeE:
       12:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
       12:   75:    { return static_cast<_Tp&&>(__t); }
------------------
_ZSt7forwardIN2rc2fn8ConstantINS0_3SeqINS0_10ShrinkableISt5tupleIJSt6vectorIdSaIdEEEEEEEEEEEOT_RNSt16remove_referenceISD_E4typeE:
    #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    #####:   75:    { return static_cast<_Tp&&>(__t); }
------------------
_ZSt7forwardISt14default_deleteIN2rc3SeqINS1_10ShrinkableISt5tupleIJSt6vectorIdSaIdEEEEEEE8ISeqImplEEEOT_RNSt16remove_referenceISD_E4typeE:
       73:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
       73:   75:    { return static_cast<_Tp&&>(__t); }
------------------
_ZSt7forwardIRPN2rc3SeqINS0_10ShrinkableISt5tupleIJSt6vectorIdSaIdEEEEEEE8ISeqImplEEOT_RNSt16remove_referenceISD_E4typeE:
       36:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
       36:   75:    { return static_cast<_Tp&&>(__t); }
------------------
_ZSt7forwardIRN2rc10ShrinkableIdEEEOT_RNSt16remove_referenceIS4_E4typeE:
        1:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
        1:   75:    { return static_cast<_Tp&&>(__t); }
------------------
_ZSt7forwardIZNK2rc10shrinkable6detail13MapShrinkableISt5tupleIJSt6vectorIdSaIdEEEEPFNS0_6detail3AnyEOS8_EE7shrinksEvEUlONS0_10ShrinkableIS8_EEE_EOT_RNSt16remove_referenceISJ_E4typeE:
       12:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
       12:   75:    { return static_cast<_Tp&&>(__t); }
------------------
_ZSt7forwardIRKN2rc10ShrinkableISt6vectorIdSaIdEEEEEOT_RNSt16remove_referenceIS8_E4typeE:
        9:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
        9:   75:    { return static_cast<_Tp&&>(__t); }
------------------
_ZSt7forwardIZNK2rc3GenIdEclERKNS0_6RandomEiEUlvE_EOT_RNSt16remove_referenceIS7_E4typeE:
    #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    #####:   75:    { return static_cast<_Tp&&>(__t); }
------------------
_ZSt7forwardIN2rc3SeqISt6vectorINS0_10ShrinkableIdEESaIS4_EEEEEOT_RNSt16remove_referenceIS8_E4typeE:
       18:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
       18:   75:    { return static_cast<_Tp&&>(__t); }
------------------
_ZSt7forwardIZZN2rc10shrinkable11shrinkRecurISt6vectorINS0_10ShrinkableIdEESaIS5_EEZNKS0_3gen6detail15ContainerHelperIS3_IdSaIdEENS9_24GenericContainerStrategyISC_Lb0ELb0EEEE8generateIJdEEENS4_ISC_EERKNS0_6RandomEiDpRKNS0_3GenIT_EEEUlRKS7_E_EENS4_INSt5decayIT_E4typeEEEOSV_RKT0_ENKUlOS7_E_clES13_EUlS13_E_ESZ_RNSt16remove_referenceISV_E4typeE:
       12:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
       12:   75:    { return static_cast<_Tp&&>(__t); }
------------------
_ZSt7forwardIN2rc2fn8ConstantISt6vectorINS0_10ShrinkableIdEESaIS5_EEEEEOT_RNSt16remove_referenceIS9_E4typeE:
      452:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
      452:   75:    { return static_cast<_Tp&&>(__t); }
------------------
_ZSt7forwardIZN2rc10shrinkable11shrinkRecurISt6vectorINS0_10ShrinkableIdEESaIS5_EEZNKS0_3gen6detail15ContainerHelperIS3_IdSaIdEENS9_24GenericContainerStrategyISC_Lb0ELb0EEEE8generateIJdEEENS4_ISC_EERKNS0_6RandomEiDpRKNS0_3GenIT_EEEUlRKS7_E_EENS4_INSt5decayIT_E4typeEEEOSV_RKT0_EUlOS7_E_ESZ_RNSt16remove_referenceISV_E4typeE:
      452:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
      452:   75:    { return static_cast<_Tp&&>(__t); }
------------------
_ZSt7forwardIN2rc10ShrinkableISt6vectorINS1_IdEESaIS3_EEEEEOT_RNSt16remove_referenceIS7_E4typeE:
      231:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
      231:   75:    { return static_cast<_Tp&&>(__t); }
------------------
_ZSt7forwardISt14default_deleteIN2rc3SeqINS1_10ShrinkableIdEEE8ISeqImplEEEOT_RNSt16remove_referenceIS8_E4typeE:
        2:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
        2:   75:    { return static_cast<_Tp&&>(__t); }
------------------
_ZSt7forwardIZNK2rc3gen6detail18CollectionStrategyISt6vectorIdSaIdEEE14shrinkElementsIdEENS0_3SeqIS4_INS0_10ShrinkableIT_EESaISC_EEEERKSE_EUlRKNSA_IdEEE_EOSB_RNSt16remove_referenceISB_E4typeE:
        9:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
        9:   75:    { return static_cast<_Tp&&>(__t); }
------------------
_ZSt7forwardIRPN2rc3SeqISt6vectorINS0_10ShrinkableIdEESaIS4_EEE8ISeqImplEEOT_RNSt16remove_referenceISB_E4typeE:
       54:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
       54:   75:    { return static_cast<_Tp&&>(__t); }
------------------
_ZSt7forwardISt14default_deleteIN2rc3SeqINS1_10ShrinkableISt6vectorINS3_IdEESaIS5_EEEEE8ISeqImplEEEOT_RNSt16remove_referenceISC_E4typeE:
       37:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
       37:   75:    { return static_cast<_Tp&&>(__t); }
------------------
_ZSt7forwardIN2rc10ShrinkableINS0_6detail3AnyEEEEOT_RNSt16remove_referenceIS5_E4typeE:
      545:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
      545:   75:    { return static_cast<_Tp&&>(__t); }
------------------
_ZSt7forwardIN2rc10ShrinkableIdEEEOT_RNSt16remove_referenceIS3_E4typeE:
     7571:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
     7571:   75:    { return static_cast<_Tp&&>(__t); }
------------------
_ZSt7forwardIRPN2rc3SeqINS0_10ShrinkableIdEEE8ISeqImplEEOT_RNSt16remove_referenceIS8_E4typeE:
    #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    #####:   75:    { return static_cast<_Tp&&>(__t); }
------------------
_ZSt7forwardIRPN2rc3SeqINS0_10ShrinkableISt6vectorINS2_IdEESaIS4_EEEEE8ISeqImplEEOT_RNSt16remove_referenceISC_E4typeE:
       18:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
       18:   75:    { return static_cast<_Tp&&>(__t); }
------------------
_ZSt7forwardIN2rc3SeqINS0_10ShrinkableIdEEEEEOT_RNSt16remove_referenceIS5_E4typeE:
    #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    #####:   75:    { return static_cast<_Tp&&>(__t); }
------------------
_ZSt7forwardIN2rc2fn8ConstantINS0_3SeqINS0_10ShrinkableIdEEEEEEEOT_RNSt16remove_referenceIS8_E4typeE:
    #####:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    #####:   75:    { return static_cast<_Tp&&>(__t); }
------------------
_ZSt7forwardIRKN2rc10ShrinkableIdEEEOT_RNSt16remove_referenceIS5_E4typeE:
     2554:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
     2554:   75:    { return static_cast<_Tp&&>(__t); }
------------------
_ZSt7forwardIdEOT_RNSt16remove_referenceIS0_E4typeE:
     8133:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
     8133:   75:    { return static_cast<_Tp&&>(__t); }
------------------
_ZSt7forwardIRKPFSt6vectorIdSaIdEERKS0_IN2rc10ShrinkableIdEESaIS5_EEEEOT_RNSt16remove_referenceISE_E4typeE:
       20:   74:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
       20:   75:    { return static_cast<_Tp&&>(__t); }
------------------
        -:   76:
        -:   77:  /**
        -:   78:   *  @brief  Forward an rvalue.
        -:   79:   *  @return The parameter cast to the specified type.
        -:   80:   *
        -:   81:   *  This function is used to implement "perfect forwarding".
        -:   82:   */
        -:   83:  template<typename _Tp>
        -:   84:    constexpr _Tp&&
        -:   85:    forward(typename std::remove_reference<_Tp>::type&& __t) noexcept
        -:   86:    {
        -:   87:      static_assert(!std::is_lvalue_reference<_Tp>::value, "template argument"
        -:   88:		    " substituting _Tp is an lvalue reference type");
        -:   89:      return static_cast<_Tp&&>(__t);
        -:   90:    }
        -:   91:
        -:   92:  /**
        -:   93:   *  @brief  Convert a value to an rvalue.
        -:   94:   *  @param  __t  A thing of arbitrary type.
        -:   95:   *  @return The parameter cast to an rvalue-reference to allow moving it.
        -:   96:  */
        -:   97:  template<typename _Tp>
        -:   98:    constexpr typename std::remove_reference<_Tp>::type&&
   23629*:   99:    move(_Tp&& __t) noexcept
   23629*:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
------------------
_ZSt4moveIRN2rc3GenISt5tupleIJSt6vectorIdSaIdEEEEEEEONSt16remove_referenceIT_E4typeEOSA_:
      232:   99:    move(_Tp&& __t) noexcept
      232:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
------------------
_ZSt4moveIRPdEONSt16remove_referenceIT_E4typeEOS3_:
     3150:   99:    move(_Tp&& __t) noexcept
     3150:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
------------------
_ZSt4moveIRSaIdEEONSt16remove_referenceIT_E4typeEOS3_:
      700:   99:    move(_Tp&& __t) noexcept
      700:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
------------------
_ZSt4moveIRSt4pairIPN2rc6detail15PropertyContextEmEEONSt16remove_referenceIT_E4typeEOS8_:
      232:   99:    move(_Tp&& __t) noexcept
      232:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
------------------
_ZSt4moveIRPN2rc6detail15PropertyContextEEONSt16remove_referenceIT_E4typeEOS6_:
      116:   99:    move(_Tp&& __t) noexcept
      116:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
------------------
_ZSt4moveIRPN2rc6detail3Any8IAnyImplEEONSt16remove_referenceIT_E4typeEOS7_:
      351:   99:    move(_Tp&& __t) noexcept
      351:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
------------------
_ZSt4moveIRN2rc3GenISt6vectorIdSaIdEEEEEONSt16remove_referenceIT_E4typeEOS8_:
        1:   99:    move(_Tp&& __t) noexcept
        1:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
------------------
_ZSt4moveIRPN2rc3SeqINS0_10ShrinkableISt4pairINS0_6detail12TaggedResultENS0_3gen6detail6RecipeEEEEE8ISeqImplEEONSt16remove_referenceIT_E4typeEOSG_:
       12:   99:    move(_Tp&& __t) noexcept
       12:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
------------------
_ZSt4moveIRPFvvEEONSt16remove_referenceIT_E4typeEOS4_:
    #####:   99:    move(_Tp&& __t) noexcept
    #####:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
------------------
_ZSt4moveIRPN2rc3gen6detail6Recipe10IngredientEEONSt16remove_referenceIT_E4typeEOS8_:
     3186:   99:    move(_Tp&& __t) noexcept
     3186:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
------------------
_ZSt4moveIRPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS9_:
     3078:   99:    move(_Tp&& __t) noexcept
     3078:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
------------------
_ZSt4moveIRSt6vectorIdSaIdEEEONSt16remove_referenceIT_E4typeEOS5_:
      466:   99:    move(_Tp&& __t) noexcept
      466:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
------------------
_ZSt4moveIRSt5tupleIJSt6vectorIdSaIdEEEEEONSt16remove_referenceIT_E4typeEOS7_:
      116:   99:    move(_Tp&& __t) noexcept
      116:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
------------------
_ZSt4moveIRN2rc3gen6detail24GenericContainerStrategyISt6vectorIdSaIdEELb0ELb0EEEEONSt16remove_referenceIT_E4typeEOSA_:
        1:   99:    move(_Tp&& __t) noexcept
        1:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
------------------
_ZSt4moveIRSaIN2rc3gen6detail6Recipe10IngredientEEEONSt16remove_referenceIT_E4typeEOS8_:
      708:   99:    move(_Tp&& __t) noexcept
      708:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
------------------
_ZSt4moveIRSaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEONSt16remove_referenceIT_E4typeEOS9_:
      345:   99:    move(_Tp&& __t) noexcept
      345:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
------------------
_ZSt4moveIRSt4pairIPN2rc3gen6detail17GenerationHandlerEmEEONSt16remove_referenceIT_E4typeEOS9_:
      232:   99:    move(_Tp&& __t) noexcept
      232:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
------------------
_ZSt4moveIRN2rc3SeqINS0_3gen6detail6RecipeEEEEONSt16remove_referenceIT_E4typeEOS8_:
        6:   99:    move(_Tp&& __t) noexcept
        6:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
------------------
_ZSt4moveIRPN2rc3gen6detail17GenerationHandlerEEONSt16remove_referenceIT_E4typeEOS7_:
      116:   99:    move(_Tp&& __t) noexcept
      116:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
------------------
_ZSt4moveIRSt6vectorIN2rc3gen6detail6Recipe10IngredientESaIS5_EEEONSt16remove_referenceIT_E4typeEOSA_:
      467:   99:    move(_Tp&& __t) noexcept
      467:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
------------------
_ZSt4moveIRSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEEONSt16remove_referenceIT_E4typeEOSB_:
      342:   99:    move(_Tp&& __t) noexcept
      342:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
------------------
_ZSt4moveIRN2rc3gen6detail6RecipeEEONSt16remove_referenceIT_E4typeEOS6_:
      137:   99:    move(_Tp&& __t) noexcept
      137:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
------------------
_ZSt4moveIRSaIcEEONSt16remove_referenceIT_E4typeEOS3_:
    #####:   99:    move(_Tp&& __t) noexcept
    #####:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
------------------
_ZSt4moveIRN2rc10ShrinkableINS0_6detail3AnyEEEEONSt16remove_referenceIT_E4typeEOS7_:
      123:   99:    move(_Tp&& __t) noexcept
      123:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
------------------
_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_:
      492:   99:    move(_Tp&& __t) noexcept
      492:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
------------------
_ZSt4moveIRN2rc10ShrinkableISt4pairINS0_6detail12TaggedResultENS0_3gen6detail6RecipeEEEEEONSt16remove_referenceIT_E4typeEOSC_:
      239:   99:    move(_Tp&& __t) noexcept
      239:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
------------------
_ZSt4moveIRSaIcEEONSt16remove_referenceIT_E4typeEOS3_:
    #####:   99:    move(_Tp&& __t) noexcept
    #####:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
------------------
_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_:
        9:   99:    move(_Tp&& __t) noexcept
        9:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
------------------
_ZSt4moveIRSaIcEEONSt16remove_referenceIT_E4typeEOS3_:
    #####:   99:    move(_Tp&& __t) noexcept
    #####:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
------------------
_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_:
        3:   99:    move(_Tp&& __t) noexcept
        3:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
------------------
_ZSt4moveIRSaIcEEONSt16remove_referenceIT_E4typeEOS3_:
    #####:   99:    move(_Tp&& __t) noexcept
    #####:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
------------------
_ZSt4moveIRPN2rc3SeqINS0_10ShrinkableINS0_6detail3AnyEEEE8ISeqImplEEONSt16remove_referenceIT_E4typeEOSB_:
       12:   99:    move(_Tp&& __t) noexcept
       12:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
------------------
_ZSt4moveIRPN2rc3SeqINS0_10ShrinkableISt5tupleIJSt6vectorIdSaIdEEEEEEE8ISeqImplEEONSt16remove_referenceIT_E4typeEOSE_:
       21:   99:    move(_Tp&& __t) noexcept
       21:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
------------------
_ZSt4moveIRN2rc10ShrinkableISt6vectorIdSaIdEEEEEONSt16remove_referenceIT_E4typeEOS8_:
       15:   99:    move(_Tp&& __t) noexcept
       15:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
------------------
_ZSt4moveIRN2rc3SeqINS0_10ShrinkableISt5tupleIJSt6vectorIdSaIdEEEEEEEEEONSt16remove_referenceIT_E4typeEOSC_:
       12:   99:    move(_Tp&& __t) noexcept
       12:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
------------------
_ZSt4moveIRPN2rc3SeqINS0_10ShrinkableISt6vectorIdSaIdEEEEE8ISeqImplEEONSt16remove_referenceIT_E4typeEOSC_:
       12:   99:    move(_Tp&& __t) noexcept
       12:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
------------------
_ZSt4moveIRPN2rc3SeqINS0_10ShrinkableIdEEE8ISeqImplEEONSt16remove_referenceIT_E4typeEOS9_:
       12:   99:    move(_Tp&& __t) noexcept
       12:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
------------------
_ZSt4moveIRPN2rc3SeqINS0_3gen6detail6RecipeEE8ISeqImplEEONSt16remove_referenceIT_E4typeEOSA_:
       33:   99:    move(_Tp&& __t) noexcept
       33:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
------------------
_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_:
        6:   99:    move(_Tp&& __t) noexcept
        6:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
------------------
_ZSt4moveIRN2rc10ShrinkableISt5tupleIJSt6vectorIdSaIdEEEEEEEONSt16remove_referenceIT_E4typeEOSA_:
      246:   99:    move(_Tp&& __t) noexcept
      246:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
------------------
_ZSt4moveIRN2rc3SeqINS0_10ShrinkableISt6vectorINS2_IdEESaIS4_EEEEEEEONSt16remove_referenceIT_E4typeEOSB_:
        6:   99:    move(_Tp&& __t) noexcept
        6:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
------------------
_ZSt4moveIRPN2rc3SeqINS0_10ShrinkableISt6vectorINS2_IdEESaIS4_EEEEE8ISeqImplEEONSt16remove_referenceIT_E4typeEOSD_:
       12:   99:    move(_Tp&& __t) noexcept
       12:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
------------------
_ZSt4moveIRPN2rc3SeqISt6vectorINS0_10ShrinkableIdEESaIS4_EEE8ISeqImplEEONSt16remove_referenceIT_E4typeEOSC_:
       30:   99:    move(_Tp&& __t) noexcept
       30:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
------------------
_ZSt4moveIRPN2rc10ShrinkableIdEEEONSt16remove_referenceIT_E4typeEOS6_:
     2178:   99:    move(_Tp&& __t) noexcept
     2178:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
------------------
_ZSt4moveIRSaIN2rc10ShrinkableIdEEEEONSt16remove_referenceIT_E4typeEOS6_:
      484:   99:    move(_Tp&& __t) noexcept
      484:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
------------------
_ZSt4moveIRZNK2rc3gen6detail18CollectionStrategyISt6vectorIdSaIdEEE14shrinkElementsIdEENS0_3SeqIS4_INS0_10ShrinkableIT_EESaISC_EEEERKSE_EUlRKNSA_IdEEE_EONSt16remove_referenceISB_E4typeEOSB_:
        3:   99:    move(_Tp&& __t) noexcept
        3:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
------------------
_ZSt4moveIRN2rc10ShrinkableIdEEEONSt16remove_referenceIT_E4typeEOS5_:
     5049:   99:    move(_Tp&& __t) noexcept
     5049:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
------------------
_ZSt4moveIRN2rc10ShrinkableISt6vectorINS1_IdEESaIS3_EEEEEONSt16remove_referenceIT_E4typeEOS9_:
      241:   99:    move(_Tp&& __t) noexcept
      241:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
------------------
_ZSt4moveIRN2rc3SeqISt6vectorINS0_10ShrinkableIdEESaIS4_EEEEEONSt16remove_referenceIT_E4typeEOSA_:
       18:   99:    move(_Tp&& __t) noexcept
       18:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
------------------
_ZSt4moveIRSt6vectorIN2rc10ShrinkableIdEESaIS3_EEEONSt16remove_referenceIT_E4typeEOS8_:
      379:   99:    move(_Tp&& __t) noexcept
      379:  100:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
------------------
        -:  101:
        -:  102:
        -:  103:  template<typename _Tp>
        -:  104:    struct __move_if_noexcept_cond
        -:  105:    : public __and_<__not_<is_nothrow_move_constructible<_Tp>>,
        -:  106:                    is_copy_constructible<_Tp>>::type { };
        -:  107:
        -:  108:  /**
        -:  109:   *  @brief  Conditionally convert a value to an rvalue.
        -:  110:   *  @param  __x  A thing of arbitrary type.
        -:  111:   *  @return The parameter, possibly cast to an rvalue-reference.
        -:  112:   *
        -:  113:   *  Same as std::move unless the type's move constructor could throw and the
        -:  114:   *  type is copyable, in which case an lvalue-reference is returned instead.
        -:  115:   */
        -:  116:  template<typename _Tp>
        -:  117:    constexpr typename
        -:  118:    conditional<__move_if_noexcept_cond<_Tp>::value, const _Tp&, _Tp&&>::type
        -:  119:    move_if_noexcept(_Tp& __x) noexcept
        -:  120:    { return std::move(__x); }
        -:  121:
        -:  122:  // declval, from type_traits.
        -:  123:
        -:  124:#if __cplusplus > 201402L
        -:  125:  // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  126:  // 2296. std::addressof should be constexpr
        -:  127:# define __cpp_lib_addressof_constexpr 201603
        -:  128:#endif
        -:  129:  /**
        -:  130:   *  @brief Returns the actual address of the object or function
        -:  131:   *         referenced by r, even in the presence of an overloaded
        -:  132:   *         operator&.
        -:  133:   *  @param  __r  Reference to an object or function.
        -:  134:   *  @return   The actual address.
        -:  135:  */
        -:  136:  template<typename _Tp>
        -:  137:    inline _GLIBCXX17_CONSTEXPR _Tp*
        -:  138:    addressof(_Tp& __r) noexcept
        -:  139:    { return std::__addressof(__r); }
        -:  140:
        -:  141:  // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  142:  // 2598. addressof works on temporaries
        -:  143:  template<typename _Tp>
        -:  144:    const _Tp* addressof(const _Tp&&) = delete;
        -:  145:
        -:  146:  // C++11 version of std::exchange for internal use.
        -:  147:  template <typename _Tp, typename _Up = _Tp>
        -:  148:    inline _Tp
        -:  149:    __exchange(_Tp& __obj, _Up&& __new_val)
        -:  150:    {
        -:  151:      _Tp __old_val = std::move(__obj);
        -:  152:      __obj = std::forward<_Up>(__new_val);
        -:  153:      return __old_val;
        -:  154:    }
        -:  155:
        -:  156:  /// @} group utilities
        -:  157:
        -:  158:#define _GLIBCXX_MOVE(__val) std::move(__val)
        -:  159:#define _GLIBCXX_FORWARD(_Tp, __val) std::forward<_Tp>(__val)
        -:  160:#else
        -:  161:#define _GLIBCXX_MOVE(__val) (__val)
        -:  162:#define _GLIBCXX_FORWARD(_Tp, __val) (__val)
        -:  163:#endif
        -:  164:
        -:  165:  /**
        -:  166:   *  @addtogroup utilities
        -:  167:   *  @{
        -:  168:   */
        -:  169:
        -:  170:  /**
        -:  171:   *  @brief Swaps two values.
        -:  172:   *  @param  __a  A thing of arbitrary type.
        -:  173:   *  @param  __b  Another thing of arbitrary type.
        -:  174:   *  @return   Nothing.
        -:  175:  */
        -:  176:  template<typename _Tp>
        -:  177:    inline
        -:  178:#if __cplusplus >= 201103L
        -:  179:    typename enable_if<__and_<__not_<__is_tuple_like<_Tp>>,
        -:  180:			      is_move_constructible<_Tp>,
        -:  181:			      is_move_assignable<_Tp>>::value>::type
     4029:  182:    swap(_Tp& __a, _Tp& __b)
        -:  183:    noexcept(__and_<is_nothrow_move_constructible<_Tp>,
        -:  184:	            is_nothrow_move_assignable<_Tp>>::value)
        -:  185:#else
        -:  186:    void
        -:  187:    swap(_Tp& __a, _Tp& __b)
        -:  188:#endif
        -:  189:    {
        -:  190:      // concept requirements
        -:  191:      __glibcxx_function_requires(_SGIAssignableConcept<_Tp>)
        -:  192:
     4029:  193:      _Tp __tmp = _GLIBCXX_MOVE(__a);
     4029:  194:      __a = _GLIBCXX_MOVE(__b);
     4029:  195:      __b = _GLIBCXX_MOVE(__tmp);
     4029:  196:    }
------------------
_ZSt4swapIPN2rc3SeqINS0_10ShrinkableINS0_6detail3AnyEEEE8ISeqImplEENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleISD_ESt18is_move_assignableISD_EEE5valueEvE4typeERSD_SN_:
        4:  182:    swap(_Tp& __a, _Tp& __b)
        -:  183:    noexcept(__and_<is_nothrow_move_constructible<_Tp>,
        -:  184:	            is_nothrow_move_assignable<_Tp>>::value)
        -:  185:#else
        -:  186:    void
        -:  187:    swap(_Tp& __a, _Tp& __b)
        -:  188:#endif
        -:  189:    {
        -:  190:      // concept requirements
        -:  191:      __glibcxx_function_requires(_SGIAssignableConcept<_Tp>)
        -:  192:
        4:  193:      _Tp __tmp = _GLIBCXX_MOVE(__a);
        4:  194:      __a = _GLIBCXX_MOVE(__b);
        4:  195:      __b = _GLIBCXX_MOVE(__tmp);
        4:  196:    }
------------------
_ZSt4swapIPN2rc3SeqINS0_10ShrinkableISt5tupleIJSt6vectorIdSaIdEEEEEEE8ISeqImplEENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleISG_ESt18is_move_assignableISG_EEE5valueEvE4typeERSG_SQ_:
        7:  182:    swap(_Tp& __a, _Tp& __b)
        -:  183:    noexcept(__and_<is_nothrow_move_constructible<_Tp>,
        -:  184:	            is_nothrow_move_assignable<_Tp>>::value)
        -:  185:#else
        -:  186:    void
        -:  187:    swap(_Tp& __a, _Tp& __b)
        -:  188:#endif
        -:  189:    {
        -:  190:      // concept requirements
        -:  191:      __glibcxx_function_requires(_SGIAssignableConcept<_Tp>)
        -:  192:
        7:  193:      _Tp __tmp = _GLIBCXX_MOVE(__a);
        7:  194:      __a = _GLIBCXX_MOVE(__b);
        7:  195:      __b = _GLIBCXX_MOVE(__tmp);
        7:  196:    }
------------------
_ZSt4swapIPN2rc3SeqINS0_10ShrinkableISt6vectorIdSaIdEEEEE8ISeqImplEENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleISE_ESt18is_move_assignableISE_EEE5valueEvE4typeERSE_SO_:
        4:  182:    swap(_Tp& __a, _Tp& __b)
        -:  183:    noexcept(__and_<is_nothrow_move_constructible<_Tp>,
        -:  184:	            is_nothrow_move_assignable<_Tp>>::value)
        -:  185:#else
        -:  186:    void
        -:  187:    swap(_Tp& __a, _Tp& __b)
        -:  188:#endif
        -:  189:    {
        -:  190:      // concept requirements
        -:  191:      __glibcxx_function_requires(_SGIAssignableConcept<_Tp>)
        -:  192:
        4:  193:      _Tp __tmp = _GLIBCXX_MOVE(__a);
        4:  194:      __a = _GLIBCXX_MOVE(__b);
        4:  195:      __b = _GLIBCXX_MOVE(__tmp);
        4:  196:    }
------------------
_ZSt4swapIPN2rc3SeqINS0_10ShrinkableIdEEE8ISeqImplEENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleISB_ESt18is_move_assignableISB_EEE5valueEvE4typeERSB_SL_:
        4:  182:    swap(_Tp& __a, _Tp& __b)
        -:  183:    noexcept(__and_<is_nothrow_move_constructible<_Tp>,
        -:  184:	            is_nothrow_move_assignable<_Tp>>::value)
        -:  185:#else
        -:  186:    void
        -:  187:    swap(_Tp& __a, _Tp& __b)
        -:  188:#endif
        -:  189:    {
        -:  190:      // concept requirements
        -:  191:      __glibcxx_function_requires(_SGIAssignableConcept<_Tp>)
        -:  192:
        4:  193:      _Tp __tmp = _GLIBCXX_MOVE(__a);
        4:  194:      __a = _GLIBCXX_MOVE(__b);
        4:  195:      __b = _GLIBCXX_MOVE(__tmp);
        4:  196:    }
------------------
_ZSt4swapIPN2rc3SeqINS0_3gen6detail6RecipeEE8ISeqImplEENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleISC_ESt18is_move_assignableISC_EEE5valueEvE4typeERSC_SM_:
       11:  182:    swap(_Tp& __a, _Tp& __b)
        -:  183:    noexcept(__and_<is_nothrow_move_constructible<_Tp>,
        -:  184:	            is_nothrow_move_assignable<_Tp>>::value)
        -:  185:#else
        -:  186:    void
        -:  187:    swap(_Tp& __a, _Tp& __b)
        -:  188:#endif
        -:  189:    {
        -:  190:      // concept requirements
        -:  191:      __glibcxx_function_requires(_SGIAssignableConcept<_Tp>)
        -:  192:
       11:  193:      _Tp __tmp = _GLIBCXX_MOVE(__a);
       11:  194:      __a = _GLIBCXX_MOVE(__b);
       11:  195:      __b = _GLIBCXX_MOVE(__tmp);
       11:  196:    }
------------------
_ZSt4swapIPN2rc3SeqINS0_10ShrinkableISt6vectorINS2_IdEESaIS4_EEEEE8ISeqImplEENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleISF_ESt18is_move_assignableISF_EEE5valueEvE4typeERSF_SP_:
        4:  182:    swap(_Tp& __a, _Tp& __b)
        -:  183:    noexcept(__and_<is_nothrow_move_constructible<_Tp>,
        -:  184:	            is_nothrow_move_assignable<_Tp>>::value)
        -:  185:#else
        -:  186:    void
        -:  187:    swap(_Tp& __a, _Tp& __b)
        -:  188:#endif
        -:  189:    {
        -:  190:      // concept requirements
        -:  191:      __glibcxx_function_requires(_SGIAssignableConcept<_Tp>)
        -:  192:
        4:  193:      _Tp __tmp = _GLIBCXX_MOVE(__a);
        4:  194:      __a = _GLIBCXX_MOVE(__b);
        4:  195:      __b = _GLIBCXX_MOVE(__tmp);
        4:  196:    }
------------------
_ZSt4swapIPN2rc3SeqISt6vectorINS0_10ShrinkableIdEESaIS4_EEE8ISeqImplEENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleISE_ESt18is_move_assignableISE_EEE5valueEvE4typeERSE_SO_:
       10:  182:    swap(_Tp& __a, _Tp& __b)
        -:  183:    noexcept(__and_<is_nothrow_move_constructible<_Tp>,
        -:  184:	            is_nothrow_move_assignable<_Tp>>::value)
        -:  185:#else
        -:  186:    void
        -:  187:    swap(_Tp& __a, _Tp& __b)
        -:  188:#endif
        -:  189:    {
        -:  190:      // concept requirements
        -:  191:      __glibcxx_function_requires(_SGIAssignableConcept<_Tp>)
        -:  192:
       10:  193:      _Tp __tmp = _GLIBCXX_MOVE(__a);
       10:  194:      __a = _GLIBCXX_MOVE(__b);
       10:  195:      __b = _GLIBCXX_MOVE(__tmp);
       10:  196:    }
------------------
_ZSt4swapIPN2rc10ShrinkableIdEEENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS8_ESt18is_move_assignableIS8_EEE5valueEvE4typeERS8_SI_:
      726:  182:    swap(_Tp& __a, _Tp& __b)
        -:  183:    noexcept(__and_<is_nothrow_move_constructible<_Tp>,
        -:  184:	            is_nothrow_move_assignable<_Tp>>::value)
        -:  185:#else
        -:  186:    void
        -:  187:    swap(_Tp& __a, _Tp& __b)
        -:  188:#endif
        -:  189:    {
        -:  190:      // concept requirements
        -:  191:      __glibcxx_function_requires(_SGIAssignableConcept<_Tp>)
        -:  192:
      726:  193:      _Tp __tmp = _GLIBCXX_MOVE(__a);
      726:  194:      __a = _GLIBCXX_MOVE(__b);
      726:  195:      __b = _GLIBCXX_MOVE(__tmp);
      726:  196:    }
------------------
_ZSt4swapIPdENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS5_ESt18is_move_assignableIS5_EEE5valueEvE4typeERS5_SF_:
     1050:  182:    swap(_Tp& __a, _Tp& __b)
        -:  183:    noexcept(__and_<is_nothrow_move_constructible<_Tp>,
        -:  184:	            is_nothrow_move_assignable<_Tp>>::value)
        -:  185:#else
        -:  186:    void
        -:  187:    swap(_Tp& __a, _Tp& __b)
        -:  188:#endif
        -:  189:    {
        -:  190:      // concept requirements
        -:  191:      __glibcxx_function_requires(_SGIAssignableConcept<_Tp>)
        -:  192:
     1050:  193:      _Tp __tmp = _GLIBCXX_MOVE(__a);
     1050:  194:      __a = _GLIBCXX_MOVE(__b);
     1050:  195:      __b = _GLIBCXX_MOVE(__tmp);
     1050:  196:    }
------------------
_ZSt4swapIPN2rc6detail3Any8IAnyImplEENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS9_ESt18is_move_assignableIS9_EEE5valueEvE4typeERS9_SJ_:
      117:  182:    swap(_Tp& __a, _Tp& __b)
        -:  183:    noexcept(__and_<is_nothrow_move_constructible<_Tp>,
        -:  184:	            is_nothrow_move_assignable<_Tp>>::value)
        -:  185:#else
        -:  186:    void
        -:  187:    swap(_Tp& __a, _Tp& __b)
        -:  188:#endif
        -:  189:    {
        -:  190:      // concept requirements
        -:  191:      __glibcxx_function_requires(_SGIAssignableConcept<_Tp>)
        -:  192:
      117:  193:      _Tp __tmp = _GLIBCXX_MOVE(__a);
      117:  194:      __a = _GLIBCXX_MOVE(__b);
      117:  195:      __b = _GLIBCXX_MOVE(__tmp);
      117:  196:    }
------------------
_ZSt4swapIPN2rc3SeqINS0_10ShrinkableISt4pairINS0_6detail12TaggedResultENS0_3gen6detail6RecipeEEEEE8ISeqImplEENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleISI_ESt18is_move_assignableISI_EEE5valueEvE4typeERSI_SS_:
        4:  182:    swap(_Tp& __a, _Tp& __b)
        -:  183:    noexcept(__and_<is_nothrow_move_constructible<_Tp>,
        -:  184:	            is_nothrow_move_assignable<_Tp>>::value)
        -:  185:#else
        -:  186:    void
        -:  187:    swap(_Tp& __a, _Tp& __b)
        -:  188:#endif
        -:  189:    {
        -:  190:      // concept requirements
        -:  191:      __glibcxx_function_requires(_SGIAssignableConcept<_Tp>)
        -:  192:
        4:  193:      _Tp __tmp = _GLIBCXX_MOVE(__a);
        4:  194:      __a = _GLIBCXX_MOVE(__b);
        4:  195:      __b = _GLIBCXX_MOVE(__tmp);
        4:  196:    }
------------------
_ZSt4swapIPN2rc3gen6detail6Recipe10IngredientEENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleISA_ESt18is_move_assignableISA_EEE5valueEvE4typeERSA_SK_:
     1062:  182:    swap(_Tp& __a, _Tp& __b)
        -:  183:    noexcept(__and_<is_nothrow_move_constructible<_Tp>,
        -:  184:	            is_nothrow_move_assignable<_Tp>>::value)
        -:  185:#else
        -:  186:    void
        -:  187:    swap(_Tp& __a, _Tp& __b)
        -:  188:#endif
        -:  189:    {
        -:  190:      // concept requirements
        -:  191:      __glibcxx_function_requires(_SGIAssignableConcept<_Tp>)
        -:  192:
     1062:  193:      _Tp __tmp = _GLIBCXX_MOVE(__a);
     1062:  194:      __a = _GLIBCXX_MOVE(__b);
     1062:  195:      __b = _GLIBCXX_MOVE(__tmp);
     1062:  196:    }
------------------
_ZSt4swapIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleISB_ESt18is_move_assignableISB_EEE5valueEvE4typeERSB_SL_:
     1026:  182:    swap(_Tp& __a, _Tp& __b)
        -:  183:    noexcept(__and_<is_nothrow_move_constructible<_Tp>,
        -:  184:	            is_nothrow_move_assignable<_Tp>>::value)
        -:  185:#else
        -:  186:    void
        -:  187:    swap(_Tp& __a, _Tp& __b)
        -:  188:#endif
        -:  189:    {
        -:  190:      // concept requirements
        -:  191:      __glibcxx_function_requires(_SGIAssignableConcept<_Tp>)
        -:  192:
     1026:  193:      _Tp __tmp = _GLIBCXX_MOVE(__a);
     1026:  194:      __a = _GLIBCXX_MOVE(__b);
     1026:  195:      __b = _GLIBCXX_MOVE(__tmp);
     1026:  196:    }
------------------
        -:  197:
        -:  198:  // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  199:  // DR 809. std::swap should be overloaded for array types.
        -:  200:  /// Swap the contents of two arrays.
        -:  201:  template<typename _Tp, size_t _Nm>
        -:  202:    inline
        -:  203:#if __cplusplus >= 201103L
        -:  204:    typename enable_if<__is_swappable<_Tp>::value>::type
        -:  205:    swap(_Tp (&__a)[_Nm], _Tp (&__b)[_Nm])
        -:  206:    noexcept(__is_nothrow_swappable<_Tp>::value)
        -:  207:#else
        -:  208:    void
        -:  209:    swap(_Tp (&__a)[_Nm], _Tp (&__b)[_Nm])
        -:  210:#endif
        -:  211:    {
        -:  212:      for (size_t __n = 0; __n < _Nm; ++__n)
        -:  213:	swap(__a[__n], __b[__n]);
        -:  214:    }
        -:  215:
        -:  216:  /// @} group utilities
        -:  217:_GLIBCXX_END_NAMESPACE_VERSION
        -:  218:} // namespace
        -:  219:
        -:  220:#endif /* _MOVE_H */
